{"version":3,"sources":["areas/examples/list.tsx","areas/home/home.module.scss","areas/home/home.tsx"],"names":["List","React","id","name","location","rows","Set","selected","changeSelected","label","mapColumn","mapNameCol","onAscending","onDescending","columns","isSelected","row","has","onSelect","newSelection","delete","add","onSelectAll","newSelected","length","size","sortedColumn","sortDirection","to","generatePath","Paths","examples","parameterized","className","module","exports","cx","classnames","bind","require","Home","useTranslation","loc","acc","setAcc","val","setVal","expanded","setExpanded","checkbox","setCheckbox","combo","setCombo","radio","setRadio","select","setSelect","textArea","setTextArea","text","setText","datetime","setDatetime","number","setNumber","icon","onChange","value","disabled","onClick","primary","href","onClose","type","AlertType","Warning","Error","Success","style","width","height","position","kind","banner","background","backgroundColor","fixed","IconSize","large","alignment","role","map","option","index","key","data-idx","links","active","c","indeterminate","options","optionSelect","newValue","toString","tooltip","error","required","initialValue","onToggle","s"],"mappings":"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","file":"static/js/6.cd31856f.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { GenericManagementList } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/List';\r\nimport { Link, generatePath } from 'react-router-dom';\r\nimport { Paths } from '../../shell/routes';\r\n\r\nexport interface Properties {\r\n}\r\n\r\ninterface Row {\r\n    id: string;\r\n    name: string;\r\n    location: string;\r\n}\r\n\r\nexport function List() {\r\n    const [rows] = React.useState(() => [\r\n        { id: 'foo', name: 'Foo', location: 'Seattle' },\r\n        { id: 'bar', name: 'Bar', location: 'Redmond' },\r\n    ]);\r\n\r\n    const [selected, changeSelected] = React.useState(new Set<string>());\r\n    function isSelected(row: Row) {\r\n        return selected.has(row.id);\r\n    }\r\n\r\n    function onSelect(row: Row) {\r\n        const newSelection = new Set<string>(selected);\r\n        if (!newSelection.delete(row.id)) {\r\n            newSelection.add(row.id);\r\n        }\r\n\r\n        changeSelected(newSelection);\r\n    }\r\n\r\n    function onSelectAll() {\r\n        const newSelected = new Set<string>();\r\n        if (rows.length !== selected.size) {\r\n            for (const row of rows) {\r\n                newSelected.add(row.id);\r\n            }\r\n        }\r\n        \r\n        changeSelected(newSelected);\r\n    }\r\n\r\n    const name = {\r\n        label: 'Name',\r\n        mapColumn: mapNameCol,\r\n        onAscending: () => { },\r\n        onDescending: () => { }\r\n    };\r\n    return (\r\n        <>\r\n            <h2>List</h2>\r\n            <GenericManagementList<Row>\r\n                rows={rows}\r\n                columns={[\r\n                    name,\r\n                    { label: 'Location', mapColumn: 'location' },\r\n                ]}\r\n                isSelected={isSelected}\r\n                onSelect={onSelect}\r\n                onSelectAll={onSelectAll}\r\n                sortedColumn={name}\r\n                sortDirection='descending'\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapNameCol(row: Row) {\r\n    return (\r\n        <Link to={generatePath(Paths.examples.parameterized, { id: row.id })} className='link'>{row.name}</Link>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"home_header__1Yyyy\",\"control\":\"home_control__2M1Wx\",\"icon\":\"home_icon__3egXa\",\"container\":\"home_container__1oXeV\",\"card-bg\":\"home_card-bg__ETnJO\"};","import * as React from 'react';\r\nimport classnames from 'classnames/bind';\r\nimport { useTranslation } from '../../i18n';\r\nimport { ToggleField, CheckboxField, ComboField, RadioField, SelectField, TextAreaField, TextField } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Field';\r\nimport { Button } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Button';\r\nimport { Alert, AlertType } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Alert';\r\nimport { ActionTriggerButton, ActionTriggerLink } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/ActionTrigger';\r\nimport { HorizontalLoader } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Loader';\r\nimport { Spinner } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Loader/Spinner';\r\nimport { Thumbnail } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Thumbnail';\r\nimport { GalleryCard, SolidBackground } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/GalleryCard';\r\nimport { IconSize, Icon } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Icon';\r\nimport { List } from '../examples/list';\r\nimport * as InlinePopup from '@microsoft/azure-iot-ux-fluent-controls/lib/components/InlinePopup';\r\nimport { PivotMenu } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Pivot';\r\nimport { FormOption } from '@microsoft/azure-iot-ux-fluent-controls/lib/Common';\r\nimport { DateTimeField } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/DateTime';\r\nimport { Accordion } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Accordion';\r\nimport CheckboxInput from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Input/CheckboxInput';\r\nimport NumberInput from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Input/NumberInput';\r\n\r\nconst cx = classnames.bind(require('./home.module.scss'));\r\n\r\nexport default function Home() {\r\n    const [loc] = useTranslation();\r\n    const [acc, setAcc] = React.useState(true);\r\n    const [val, setVal] = React.useState(false);\r\n    const [expanded, setExpanded] = React.useState(false);\r\n    const [checkbox, setCheckbox] = React.useState(false);\r\n    const [combo, setCombo] = React.useState<string | FormOption>('1');\r\n    const [radio, setRadio] = React.useState<string | FormOption>('1');\r\n    const [select, setSelect] = React.useState<string | FormOption>('1');\r\n    const [textArea, setTextArea] = React.useState('');\r\n    const [text, setText] = React.useState('');\r\n    const [datetime, setDatetime] = React.useState('');\r\n    const [number, setNumber] = React.useState<number | 'invalid'>(0);\r\n\r\n    return (\r\n        <div className={cx('container')}>\r\n            <h1 className={cx('header')}>{loc('navigation.home')}</h1>\r\n            <div className={cx('control')}>\r\n                <Icon icon='chevronDown' />\r\n                <Icon icon='delete' />\r\n                <Icon icon='cancel' />\r\n                <Icon icon='chevronUp' />\r\n                <Icon icon='Cancel' />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ToggleField name='toggle' label='Label' onChange={setVal} value={val} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ToggleField name='toggle' label='Label' onChange={() => {}} value={true} disabled />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ToggleField name='toggle' label='Label' onChange={() => {}} value={false} disabled />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Button onClick={() =>{}}>Button</Button>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Button onClick={() =>{}} primary>Button</Button>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Button onClick={() =>{}} className='btn-danger'>Button</Button>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Button onClick={() =>{}} disabled>Button</Button>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Button onClick={() =>{}} primary disabled>Button</Button>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Button onClick={() =>{}} disabled className='btn-danger'>Button</Button>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ActionTriggerButton icon='add' label='Button' />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ActionTriggerLink icon='add' label='Link' href='' />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ActionTriggerButton icon='add' label='Button' disabled />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Alert onClose={() =>{}}>This is an alert!</Alert>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Alert onClose={() =>{}} type={AlertType.Warning}>This is an alert!</Alert>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Alert onClose={() =>{}} type={AlertType.Error}>This is an alert!</Alert>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Alert onClose={() => { }} type={AlertType.Success}>This is an alert!</Alert>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <HorizontalLoader />\r\n            </div>\r\n            <div className={cx('control')} style={{ width: '50px', height: '50px', position: 'relative' }}>\r\n                <Spinner />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Thumbnail size='search-result' kind='product' />\r\n                <Thumbnail size='search-result' kind='device' />\r\n                <Thumbnail size='search-result' kind='user' />\r\n                <Thumbnail size='search-result' kind='unknown' />\r\n                <Thumbnail size='search-result' kind='missing' />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <a className={cx('gallery-card-link')} href='localhost:3000'>\r\n                    <GalleryCard banner='Comming Soon' background={\r\n                        <SolidBackground backgroundColor='blue' fixed className={cx('card-bg')}>\r\n                            <Icon icon='page' size={IconSize.large} className={cx('icon')} />\r\n                        </SolidBackground>} fixed>\r\n                        <header>This is the title</header>\r\n                        <section>We here explain what this card is and why you should use it without any issues</section>\r\n                    </GalleryCard>\r\n                </a>\r\n               <GalleryCard banner='Comming Soon' background={\r\n                    <SolidBackground backgroundColor='' fixed className={cx('card-bg')}>\r\n                        <Icon icon='page' size={IconSize.large} className={cx('icon')} />\r\n                    </SolidBackground>} fixed>\r\n                    <header>This is the title</header>\r\n                    <section>We here explain what this card is and why you should use it without any issues</section>\r\n                </GalleryCard>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <List />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <InlinePopup.Container expanded={expanded}>\r\n                    <InlinePopup.Label onClick={expanded ? () => setExpanded(false) : () => setExpanded(true)}>\r\n                        <Icon icon='info' />\r\n                    </InlinePopup.Label>\r\n                    <InlinePopup.Panel alignment='left' expanded={expanded}>\r\n                        <ul role='listbox' className={cx('option-list')}>\r\n                            {['One', 'Two', 'Three'].map((option, index) =>\r\n                                <li key={index} role='presentation'>\r\n                                    <button\r\n                                        data-idx={index}\r\n                                        className={cx('inline-text-overflow')}>\r\n                                        {option}\r\n                                    </button>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </InlinePopup.Panel>\r\n                </InlinePopup.Container>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <PivotMenu links={[\r\n                    {\r\n                        key: 'one',\r\n                        icon: 'add',\r\n                        label: 'One',\r\n                        href: ''\r\n                    },\r\n                    {\r\n                        key: 'two',\r\n                        icon: 'remove',\r\n                        label: 'Two',\r\n                        href: '',\r\n                        disabled: true\r\n                    },\r\n                    {\r\n                        key: 'three',\r\n                        icon: 'checkMark',\r\n                        label: 'Three',\r\n                        href: '',\r\n                    }\r\n                ]} active='three' />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <CheckboxField name='checkbox' label='Checkbox' value={checkbox} onChange={() => setCheckbox(c => !c)} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <CheckboxInput name='checkbox' label='Checkbox' indeterminate onChange={() => {}} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <CheckboxInput name='checkbox' label='Checkbox' indeterminate disabled onChange={() => {}} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <CheckboxField disabled name='checkbox' label='Checkbox' value={checkbox} onChange={() => setCheckbox(c => !c)} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ComboField\r\n                    name='combo'\r\n                    value={combo}\r\n                    label='Combo'\r\n                    options={[\r\n                        { label: 'One', value: '1' },\r\n                        { label: 'Two', value: '2' },\r\n                        { label: 'Three', value: '3', disabled: true },\r\n                        { label: 'Four', value: '4' },\r\n                    ]}\r\n                    onChange={setCombo}\r\n                    optionSelect={(newValue, option) => {\r\n                        return !!option && (newValue === option.value || (!!option.label && newValue === option.label.toString()));\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <ComboField\r\n                    disabled\r\n                    name='combo'\r\n                    value={combo}\r\n                    label='Combo'\r\n                    options={[\r\n                        { label: 'One', value: '1' },\r\n                        { label: 'Two', value: '2' },\r\n                        { label: 'Three', value: '3', disabled: true },\r\n                        { label: 'Four', value: '4' },\r\n                    ]}\r\n                    onChange={setCombo}\r\n                    optionSelect={(newValue, option) => {\r\n                        return !!option && (newValue === option.value || (!!option.label && newValue === option.label.toString()));\r\n                    }}\r\n                />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <RadioField name='radio' label='Radio' value={radio} options={[\r\n                    { label: 'One', value: '1' },\r\n                    { label: 'Two', value: '2' },\r\n                    { label: 'Three', value: '3', disabled: true },\r\n                    { label: 'Four', value: '4' }\r\n                ]} onChange={setRadio} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <RadioField disabled name='radio' label='Radio' value={radio} options={[\r\n                    { label: 'One', value: '1' },\r\n                    { label: 'Two', value: '2' },\r\n                    { label: 'Three', value: '3', disabled: true },\r\n                    { label: 'Four', value: '4' }\r\n                ]} onChange={setRadio} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <SelectField name='select' label='Select' value={select} options={[\r\n                    { label: 'One', value: '1' },\r\n                    { label: 'Two', value: '2' },\r\n                    { label: 'Three', value: '3', disabled: true },\r\n                    { label: 'Four', value: '4' }\r\n                ]} onChange={setSelect} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <SelectField disabled name='select' label='Select' value={select} options={[\r\n                    { label: 'One', value: '1' },\r\n                    { label: 'Two', value: '2' },\r\n                    { label: 'Three', value: '3', disabled: true },\r\n                    { label: 'Four', value: '4' }\r\n                ]} onChange={setSelect} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <TextAreaField name='textarea' label='TextArea' value={textArea} onChange={setTextArea} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <TextAreaField disabled name='textarea' label='TextArea' value={textArea} onChange={setTextArea} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <TextField name='text' label='Text' value={text} onChange={setText} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <TextField disabled name='text' label='Text' value={text} onChange={setText} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <TextField \r\n                    tooltip='This is some text for the tooltip' \r\n                    error='This is an error message' \r\n                    name='text' \r\n                    label='Text'\r\n                    required \r\n                    value={text} \r\n                    onChange={setText} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <NumberInput \r\n                    name='text'\r\n                    initialValue={number}\r\n                    onChange={setNumber}/>\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <DateTimeField name='datetime' label='DateTime' initialValue={datetime} onChange={setDatetime} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <DateTimeField disabled name='datetime' label='DateTime' initialValue={datetime} onChange={setDatetime} />\r\n            </div>\r\n            <div className={cx('control')}>\r\n                <Accordion onToggle={() => setAcc(s => !s)} expanded={acc}>\r\n                    Hello\r\n                </Accordion>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n"],"sourceRoot":""}