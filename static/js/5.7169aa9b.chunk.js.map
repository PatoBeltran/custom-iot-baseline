{"version":3,"sources":["areas/examples/parameterized.tsx","areas/examples/inputs.tsx","areas/examples/examples.tsx","areas/examples/list.tsx","areas/examples/inputs.module.scss","areas/examples/examples.module.scss"],"names":["Parameterized","_ref","match","react","params","id","cx","classnames","require","Inputs","_React$useState","React","_React$useState2","Object","slicedToArray","textValue","changeTextValue","_React$useState3","_React$useState4","checkboxValue","changeCheckboxValue","_React$useState5","_React$useState6","toggleValue","changeToggleValue","_React$useState7","_React$useState8","radioValue","changeRadioValue","_React$useState9","_React$useState10","dateTimeValue","changeDateTimeValue","className","Field","name","value","onChange","label","tooltip","required","onLabel","offLabel","options","Select","DateTime","initialValue","_React$useState11","_React$useState12","selectValue","changeSelectValue","_React$useState13","disabled","hidden","_React$useState14","selectOptions","changeSelectOptions","handle","setTimeout","clearTimeout","bind","Examples","_useTranslation","useTranslation","loc","react_router_dom","to","Paths","examples","index","react_router","path","exact","component","Root","list","List","inputs","parameterized","location","rows","D_w_iot_ux_baseline_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","Set","selected","changeSelected","react__WEBPACK_IMPORTED_MODULE_1__","_microsoft_azure_iot_ux_fluent_controls_lib_components_List__WEBPACK_IMPORTED_MODULE_2__","columns","mapColumn","mapNameCol","isSelected","row","has","onSelect","newSelection","delete","add","onSelectAll","newSelected","length","size","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","react_router_dom__WEBPACK_IMPORTED_MODULE_3__","generatePath","module","exports","container","header"],"mappings":"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","file":"static/js/5.7169aa9b.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\n\r\nexport function Parameterized({ match }: RouteComponentProps<{ id: string }>) {\r\n    return (\r\n        <h4>This is a parameterized route for: {match.params.id}</h4>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport * as classnames from 'classnames/bind';\r\nimport { TextField, CheckboxField, ToggleField, RadioField, SelectField } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/Field'\r\nimport { DateTimeField } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/DateTime'\r\nimport { FormOption } from '@microsoft/azure-iot-ux-fluent-controls/lib/Common';\r\n\r\nconst cx = classnames.bind(require('./inputs.module.scss'));\r\n\r\nexport function Inputs() {\r\n    // use hooks (https://reactjs.org/docs/hooks-intro.html) to maintain state:\r\n    const [textValue, changeTextValue] = React.useState('');\r\n    const [checkboxValue, changeCheckboxValue] = React.useState(true);\r\n    const [toggleValue, changeToggleValue] = React.useState(true);\r\n    const [radioValue, changeRadioValue] = React.useState('option1');\r\n    const [dateTimeValue, changeDateTimeValue] = React.useState('');\r\n\r\n    return (\r\n        <div className={cx('container')}>\r\n            <h2>Inputs</h2>\r\n            <TextField \r\n                name='textField'\r\n                value={textValue}\r\n                onChange={changeTextValue}\r\n                label='Text Field'\r\n                tooltip='Description for a text field'\r\n                required\r\n            />\r\n            <CheckboxField \r\n                name='checkboxField'\r\n                value={checkboxValue}\r\n                onChange={changeCheckboxValue}\r\n                label='Checkbox Field'\r\n            />\r\n            <ToggleField\r\n                name='toggleField'\r\n                value={toggleValue}\r\n                onChange={changeToggleValue}\r\n                label='Toggle Field'\r\n                onLabel='Enabled'\r\n                offLabel='Disabled'\r\n            />\r\n            <RadioField\r\n                name='radioField'\r\n                value={radioValue}\r\n                onChange={changeRadioValue}\r\n                label='Radio Field'\r\n                options={[\r\n                    { value: 'option1', label: 'Option 1' },\r\n                    { value: 'option2', label: 'Option 2' },\r\n                ]}\r\n            />\r\n            <Select />\r\n            <DateTimeField\r\n                name='dateTimeField'\r\n                initialValue={dateTimeValue}\r\n                onChange={changeDateTimeValue}\r\n                label='Date Time Field'\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Select() {\r\n    const [selectValue, changeSelectValue] = React.useState('');\r\n    const [selectOptions, changeSelectOptions] = React.useState<FormOption[]>([\r\n        // show a placeholder text initially:\r\n        { value: '', label: 'Loadingâ€¦', disabled: true, hidden: true }\r\n    ]);\r\n\r\n    React.useEffect(() => {\r\n        // load the actual options asynchronously. In practice, we'd probably call fetch()\r\n        // to make an HTTP call and call changeSelectOptions() after the promise resolves.\r\n        const handle = setTimeout(() => {\r\n            changeSelectOptions([\r\n                // Replace the placeholder text now that we've finished loading:\r\n                { value: '', label: 'Select an option', hidden: true, disabled: true },\r\n                \r\n                // actual options:\r\n                { value: 'option1', label: 'Option 1' },\r\n                { value: 'option2', label: 'Option 2' },\r\n            ]);\r\n        }, 2000);\r\n\r\n        // return a function that cleans up after this effect (e.g., if the \r\n        // component unloads before the options are fetched):\r\n        return () => clearTimeout(handle);\r\n    }, [changeSelectOptions]);\r\n\r\n    return (\r\n        <SelectField\r\n            name='selectField'\r\n            value={selectValue}\r\n            onChange={changeSelectValue}\r\n            label='Select Field'\r\n            options={selectOptions}\r\n        />\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport classnames from 'classnames/bind';\r\nimport { useTranslation } from '../../i18n';\r\nimport { Paths } from '../../shell/routes';\r\n\r\nimport { List } from './list';\r\nimport { Parameterized } from './parameterized';\r\nimport { Inputs } from './inputs';\r\n\r\nconst cx = classnames.bind(require('./examples.module.scss'));\r\n\r\nexport default function Examples() {\r\n    const [loc] = useTranslation();    \r\n    return (\r\n        <div className={cx('container')}>\r\n            <h1 className={cx('header')}>\r\n                <Link to={Paths.examples.index} className='link'>{loc('navigation.examples')}</Link>\r\n            </h1>\r\n            <Switch>\r\n                <Route path={Paths.examples.index} exact component={Root} />\r\n                <Route path={Paths.examples.list} component={List} />\r\n                <Route path={Paths.examples.inputs} component={Inputs} />\r\n                <Route path={Paths.examples.parameterized} component={Parameterized} />\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Root() {\r\n    return (\r\n        <ul>\r\n            <li><Link to={Paths.examples.list} className='link'>List</Link></li>\r\n            <li><Link to={Paths.examples.inputs} className='link'>Inputs</Link></li>\r\n        </ul>\r\n    );\r\n}\r\n","import * as React from 'react';\r\nimport { GenericManagementList } from '@microsoft/azure-iot-ux-fluent-controls/lib/components/List';\r\nimport { Link, generatePath } from 'react-router-dom';\r\nimport { Paths } from '../../shell/routes';\r\n\r\nexport interface Properties {\r\n}\r\n\r\ninterface Row {\r\n    id: string;\r\n    name: string;\r\n    location: string;\r\n}\r\n\r\nexport function List() {\r\n    const [rows] = React.useState(() => [\r\n        { id: 'foo', name: 'Foo', location: 'Seattle' },\r\n        { id: 'bar', name: 'Bar', location: 'Redmond' },\r\n    ]);\r\n\r\n    const [selected, changeSelected] = React.useState(new Set<string>());\r\n    function isSelected(row: Row) {\r\n        return selected.has(row.id);\r\n    }\r\n\r\n    function onSelect(row: Row) {\r\n        const newSelection = new Set<string>(selected);\r\n        if (!newSelection.delete(row.id)) {\r\n            newSelection.add(row.id);\r\n        }\r\n\r\n        changeSelected(newSelection);\r\n    }\r\n\r\n    function onSelectAll() {\r\n        const newSelected = new Set<string>();\r\n        if (rows.length !== selected.size) {\r\n            for (const row of rows) {\r\n                newSelected.add(row.id);\r\n            }\r\n        }\r\n        \r\n        changeSelected(newSelected);\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <h2>List</h2>\r\n            <GenericManagementList<Row>\r\n                rows={rows}\r\n                columns={[\r\n                    { label: 'Name', mapColumn: mapNameCol },\r\n                    { label: 'Location', mapColumn: 'location' },\r\n                ]}\r\n                isSelected={isSelected}\r\n                onSelect={onSelect}\r\n                onSelectAll={onSelectAll}\r\n            />\r\n        </>\r\n    )\r\n}\r\n\r\nfunction mapNameCol(row: Row) {\r\n    return (\r\n        <Link to={generatePath(Paths.examples.parameterized, { id: row.id })} className='link'>{row.name}</Link>\r\n    )\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"inputs_container__3HOhf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"examples_container__TqAyc\",\"header\":\"examples_header__I1t_G\"};"],"sourceRoot":""}